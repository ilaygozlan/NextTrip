{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Routes,Route,Navigate}from\"react-router-dom\";import Navbar from\"./Navbar\";import Home from\"../pages/Home\";import MyTrips from\"../pages/MyTrips\";import RateCountry from\"../pages/RateCountry\";import CountryPage from\"../pages/CountryPage\";import LandingPage from\"../pages/LandingPage\";import Signup from\"../pages/Signup\";import config from\"../config\";import{useUser}from\"../contexts/UserContext\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const AppRoutes=()=>{const{user,setUser}=useUser();const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{const urlParams=new URLSearchParams(window.location.search||window.location.hash.split(\"?\")[1]);const code=urlParams.get(\"code\");if(code){const exchangeCodeForTokens=async()=>{try{const getTokenUrl=`${config.domain}/oauth2/token`;const response=await fetch(getTokenUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"},body:new URLSearchParams({grant_type:\"authorization_code\",client_id:config.clientId,client_secret:config.clientSecret,redirect_uri:config.redirectUri,code:code}).toString()});const data=await response.json();if(data.id_token){localStorage.setItem(\"id_token\",data.id_token);localStorage.setItem(\"access_token\",data.access_token);setIsAuthenticated(true);// Decode token to get name & email\nconst base64Url=data.id_token.split(\".\")[1];const base64=base64Url.replace(/-/g,\"+\").replace(/_/g,\"/\");const jsonPayload=decodeURIComponent(atob(base64).split(\"\").map(c=>\"%\"+(\"00\"+c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));const decoded=JSON.parse(jsonPayload);console.log(\"User email:\",decoded.email);console.log(\"User name:\",decoded.name);setUser({name:decoded.name,email:decoded.email});const fetchUserDetails=async()=>{try{const idToken=localStorage.getItem(\"id_token\");const response=await fetch(\"https://6bmdup2xzi.execute-api.us-east-1.amazonaws.com/prod/GetUserData\",{method:\"POST\",headers:{Authorization:`Bearer ${idToken}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({email:decoded.email})});if(!response.ok)throw new Error(`HTTP ${response.status}`);const userData=await response.json();console.log(\"User from Lambda:\",userData);}catch(err){console.error(\"Error fetching user details from Lambda:\",err);}};fetchUserDetails();}else{console.error(\"No ID token received.\");}}catch(err){console.error(\"Failed to exchange code for tokens:\",err);}};exchangeCodeForTokens();}},[setUser]);return/*#__PURE__*/_jsxs(_Fragment,{children:[isAuthenticated&&/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"main\",{style:{minHeight:\"calc(100vh - 64px)\",padding:\"2rem 0\"},children:/*#__PURE__*/_jsx(Routes,{children:isAuthenticated?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/my-trips\",element:/*#__PURE__*/_jsx(MyTrips,{})}),/*#__PURE__*/_jsx(Route,{path:\"/rate-country\",element:/*#__PURE__*/_jsx(RateCountry,{})}),/*#__PURE__*/_jsx(Route,{path:\"/country/:countryName\",element:/*#__PURE__*/_jsx(CountryPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/LandingPage\"})}),/*#__PURE__*/_jsx(Route,{path:\"/LandingPage\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(Signup,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/LandingPage\"})})]})})})]});};export default AppRoutes;","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Navigate","Navbar","Home","MyTrips","RateCountry","CountryPage","LandingPage","Signup","config","useUser","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","AppRoutes","user","setUser","isAuthenticated","setIsAuthenticated","urlParams","URLSearchParams","window","location","search","hash","split","code","get","exchangeCodeForTokens","getTokenUrl","domain","response","fetch","method","headers","body","grant_type","client_id","clientId","client_secret","clientSecret","redirect_uri","redirectUri","toString","data","json","id_token","localStorage","setItem","access_token","base64Url","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","slice","join","decoded","JSON","parse","console","log","email","name","fetchUserDetails","idToken","getItem","Authorization","stringify","ok","Error","status","userData","err","error","children","style","minHeight","padding","path","element","to"],"sources":["C:/Users/adida/Desktop/NextTrip/FrontEnd/src/components/AppRoutes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"../pages/Home\";\r\nimport MyTrips from \"../pages/MyTrips\";\r\nimport RateCountry from \"../pages/RateCountry\";\r\nimport CountryPage from \"../pages/CountryPage\";\r\nimport LandingPage from \"../pages/LandingPage\";\r\nimport Signup from \"../pages/Signup\";\r\nimport config from \"../config\";\r\nimport { useUser } from \"../contexts/UserContext\"; \r\n\r\nconst AppRoutes = () => {\r\n  const { user, setUser } = useUser(); \r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(\r\n      window.location.search || window.location.hash.split(\"?\")[1]\r\n    );\r\n    const code = urlParams.get(\"code\");\r\n\r\n    if (code) {\r\n      const exchangeCodeForTokens = async () => {\r\n        try {\r\n          const getTokenUrl = `${config.domain}/oauth2/token`;\r\n\r\n          const response = await fetch(getTokenUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n            body: new URLSearchParams({\r\n              grant_type: \"authorization_code\",\r\n              client_id: config.clientId,\r\n              client_secret: config.clientSecret,\r\n              redirect_uri: config.redirectUri,\r\n              code: code,\r\n            }).toString(),\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.id_token) {\r\n            localStorage.setItem(\"id_token\", data.id_token);\r\n            localStorage.setItem(\"access_token\", data.access_token);\r\n            setIsAuthenticated(true);\r\n\r\n            // Decode token to get name & email\r\n            const base64Url = data.id_token.split(\".\")[1];\r\n            const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n            const jsonPayload = decodeURIComponent(\r\n              atob(base64)\r\n                .split(\"\")\r\n                .map(\r\n                  (c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)\r\n                )\r\n                .join(\"\")\r\n            );\r\n            const decoded = JSON.parse(jsonPayload);\r\n            console.log(\"User email:\", decoded.email);\r\n            console.log(\"User name:\", decoded.name);\r\n            setUser({ name: decoded.name, email: decoded.email });\r\n\r\n            const fetchUserDetails = async () => {\r\n                try {\r\n                  const idToken = localStorage.getItem(\"id_token\");\r\n\r\n                  const response = await fetch(\r\n                    \"https://6bmdup2xzi.execute-api.us-east-1.amazonaws.com/prod/GetUserData\",\r\n                    {\r\n                      method: \"POST\", \r\n                      headers: {\r\n                        Authorization: `Bearer ${idToken}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                      },\r\n                      body: JSON.stringify({ email: decoded.email })\r\n                    }\r\n                  );\r\n\r\n                  if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n\r\n                  const userData = await response.json();\r\n                  console.log(\"User from Lambda:\", userData);\r\n                } catch (err) {\r\n                  console.error(\"Error fetching user details from Lambda:\", err);\r\n                }\r\n              };\r\n\r\n            fetchUserDetails();\r\n          } else {\r\n            console.error(\"No ID token received.\");\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Failed to exchange code for tokens:\", err);\r\n        }\r\n      };\r\n\r\n      exchangeCodeForTokens();\r\n    }\r\n  }, [setUser]);\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && <Navbar />}\r\n      <main style={{ minHeight: \"calc(100vh - 64px)\", padding: \"2rem 0\" }}>\r\n        <Routes>\r\n          {isAuthenticated ? (\r\n            <>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/my-trips\" element={<MyTrips />} />\r\n              <Route path=\"/rate-country\" element={<RateCountry />} />\r\n              <Route path=\"/country/:countryName\" element={<CountryPage />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/\" element={<Navigate to=\"/LandingPage\" />} />\r\n              <Route path=\"/LandingPage\" element={<LandingPage />} />\r\n              <Route path=\"/signup\" element={<Signup />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/LandingPage\" />} />\r\n            </>\r\n          )}\r\n        </Routes>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}