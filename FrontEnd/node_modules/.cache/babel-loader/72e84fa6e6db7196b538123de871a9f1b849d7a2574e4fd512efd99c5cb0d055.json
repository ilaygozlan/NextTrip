{"ast":null,"code":"import React,{useState}from\"react\";import styled from\"styled-components\";import geoData from\"../features.json\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  padding: 2rem;\n`;const Title=styled.h1`\n  text-align: center;\n`;const InputRow=styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;const ListContainer=styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  gap: 2rem;\n`;const ListBox=styled.div`\n  flex: 1;\n  min-width: 300px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  padding: 1rem;\n  background-color: #f9f9f9;\n`;const AdminPage=()=>{const[country,setCountry]=useState(\"\");const[users,setUsers]=useState([]);const[businesses,setBusinesses]=useState([]);const[loading,setLoading]=useState(false);const countryNames=geoData.objects.world.geometries.map(geo=>geo.properties.name);const fetchData=async()=>{if(!country)return;setLoading(true);try{const res=await fetch(`https://6bmdup2xzi.execute-api.us-east-1.amazonaws.com/prod/GetAdminCountryData?countryName=${country}`);if(!res.ok)throw new Error(\"Failed to fetch\");const data=await res.json();setUsers(data.users||[]);setBusinesses(data.businesses||[]);}catch(err){console.error(\"Failed to fetch admin data:\",err);toast.error(\"Failed to load data for this country\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"Admin Country Overview\"}),/*#__PURE__*/_jsxs(InputRow,{children:[/*#__PURE__*/_jsx(\"input\",{list:\"countries\",placeholder:\"Select country...\",value:country,onChange:e=>setCountry(e.target.value)}),/*#__PURE__*/_jsx(\"datalist\",{id:\"countries\",children:countryNames.map((name,i)=>/*#__PURE__*/_jsx(\"option\",{value:name},i))}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,disabled:loading,children:loading?\"Loading...\":\"Search\"})]}),/*#__PURE__*/_jsxs(ListContainer,{children:[/*#__PURE__*/_jsxs(ListBox,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Users Who Visited\"}),users.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No users found.\"}):/*#__PURE__*/_jsx(\"ul\",{children:users.map((u,i)=>/*#__PURE__*/_jsx(\"li\",{children:u.Email},i))})]}),/*#__PURE__*/_jsxs(ListBox,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Businesses in Country\"}),businesses.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No businesses found.\"}):/*#__PURE__*/_jsx(\"ul\",{children:businesses.map((b,i)=>/*#__PURE__*/_jsx(\"li\",{children:b.name},i))})]})]})]});};export default AdminPage;","map":{"version":3,"names":["React","useState","styled","geoData","jsx","_jsx","jsxs","_jsxs","Container","div","Title","h1","InputRow","ListContainer","ListBox","AdminPage","country","setCountry","users","setUsers","businesses","setBusinesses","loading","setLoading","countryNames","objects","world","geometries","map","geo","properties","name","fetchData","res","fetch","ok","Error","data","json","err","console","error","toast","children","list","placeholder","value","onChange","e","target","id","i","onClick","disabled","length","u","Email","b"],"sources":["C:/Users/user/Downloads/NextTrip_Frontend/NextTrip/FrontEnd/src/pages/AdminPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport geoData from \"../features.json\";\r\n\r\nconst Container = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nconst InputRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst ListBox = styled.div`\r\n  flex: 1;\r\n  min-width: 300px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  background-color: #f9f9f9;\r\n`;\r\n\r\nconst AdminPage = () => {\r\n  const [country, setCountry] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [businesses, setBusinesses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const countryNames = geoData.objects.world.geometries.map(\r\n    (geo) => geo.properties.name\r\n  );\r\n\r\n  const fetchData = async () => {\r\n    if (!country) return;\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\r\n        `https://6bmdup2xzi.execute-api.us-east-1.amazonaws.com/prod/GetAdminCountryData?countryName=${country}`\r\n      );\r\n\r\n      if (!res.ok) throw new Error(\"Failed to fetch\");\r\n\r\n      const data = await res.json();\r\n\r\n      setUsers(data.users || []);\r\n      setBusinesses(data.businesses || []);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch admin data:\", err);\r\n      toast.error(\"Failed to load data for this country\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Admin Country Overview</Title>\r\n      <InputRow>\r\n        <input\r\n          list=\"countries\"\r\n          placeholder=\"Select country...\"\r\n          value={country}\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        />\r\n        <datalist id=\"countries\">\r\n          {countryNames.map((name, i) => (\r\n            <option key={i} value={name} />\r\n          ))}\r\n        </datalist>\r\n        <button onClick={fetchData} disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Search\"}\r\n        </button>\r\n      </InputRow>\r\n\r\n      <ListContainer>\r\n        <ListBox>\r\n          <h3>Users Who Visited</h3>\r\n          {users.length === 0 ? (\r\n            <p>No users found.</p>\r\n          ) : (\r\n            <ul>\r\n              {users.map((u, i) => (\r\n                <li key={i}>{u.Email}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </ListBox>\r\n\r\n        <ListBox>\r\n          <h3>Businesses in Country</h3>\r\n          {businesses.length === 0 ? (\r\n            <p>No businesses found.</p>\r\n          ) : (\r\n            <ul>\r\n              {businesses.map((b, i) => (\r\n                <li key={i}>{b.name}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </ListBox>\r\n      </ListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}